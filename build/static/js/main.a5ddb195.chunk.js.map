{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box-component/searchbox-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","map","key","Searchbox","type","placeholder","onChange","onfilter","App","onFilterFun","e","setState","searchFeild","target","value","state","fetch","then","response","json","users","this","filtermonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAceA,G,YAXF,SAAAC,GAAK,OAElB,sBAAKC,UAAW,iBAAhB,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCYLC,EAfI,SAAAR,GAEnB,OAAO,qBAAKC,UAAU,YAAf,SAGND,EAAMG,QAAQM,KACX,SAAAN,GAAO,OACL,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQO,WCJVC,G,MALG,SAACX,GAAD,OACd,uBAAOC,UAAU,SAASW,KAAK,SAASC,YAAab,EAAMa,YAAaC,SAAUd,EAAMe,aC0C7EC,G,wDAvCb,aAAc,IAAD,8BACX,gBAQFC,YAAc,SAACC,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SARpC,EAAKC,MAAQ,CACZpB,QAAW,GACXO,IAAM,GACNU,YAAc,IALJ,E,gEAaZ,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAChB,QAAUyB,OACvCH,MAAK,SAAArB,GAAE,OAAI,EAAKe,SAAU,CAAET,IAAMN,S,+BAG5B,IAAD,EAC0ByB,KAAKN,MAA5BpB,EADH,EACGA,QAAQiB,EADX,EACWA,YACTU,EAAgB3B,EAAQ4B,QAC5B,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAGjE,OAGE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,MAAd,sBACA,cAAC,EAAD,CAAYY,YAAY,kBAAkBE,SAAUc,KAAKZ,cAEzD,cAAC,EAAD,CAAUd,QAAU2B,EAApB,sB,GAlCYI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a5ddb195.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nconst Card = props =>(\r\n\r\n<div className ='card-container'>\r\n  <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt='monster'></img>\r\n  <h2>{props.monster.name}</h2>\r\n  <p>{props.monster.email}</p>\r\n   \r\n</div>\r\n\r\n);\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport './card-list.style.css';\r\n\r\nimport Card from './../card/card.component';\r\n\r\n const  CardList = props => { \r\n\r\nreturn <div className=\"card-list\">\r\n\r\n\r\n{props.monster.map(\r\n    monster =>(\r\n      <Card key={monster.key} monster={monster}></Card>\r\n    )\r\n  )}\r\n\r\n\r\n</div>;\r\n\r\n};\r\nexport default CardList;\r\n\r\n\r\n","import React from 'react';\r\nimport './searchbox-style.css';\r\n\r\nconst Searchbox = (props) => (\r\n    <input className=\"search\" type=\"search\" placeholder={props.placeholder} onChange={props.onfilter}></input>\r\n\r\n)\r\n \r\nexport default Searchbox;","import React,{ Component } from \"react\";\nimport CardList from './components/card-list/card-list.component.jsx';\nimport Searchbox from './components/search-box-component/searchbox-component.jsx'\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n     monster :  [   ],\n     key : '',\n     searchFeild : \"\"\n\n    }\n  }\n  onFilterFun = (e) =>{\n    this.setState({searchFeild:e.target.value})\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json()    )\n    .then(users => this.setState({monster : users}))\n    .then(id => this.setState( { key : id  }))\n\n  }\n  render(){\n      const {monster,searchFeild} = this.state;\n      const filtermonster = monster.filter(\n        monster => monster.name.toLowerCase().includes(searchFeild.toLowerCase())\n      )\n    \n  return (\n  \n   \n    <div className=\"App\">\n      <h1 className=\"h11\">Monsters</h1>\n      <Searchbox  placeholder=\"Search Monsters\" onfilter={this.onFilterFun}></Searchbox>\n        \n      <CardList monster= {filtermonster}> </CardList>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}